# .circleci/config.yml

version: 2.1

orbs:
  node: circleci/node@1.1.6
  queue: eddiewebb/queue@1.0.110
  horizon: artsy/release@0.0.1

commands:
  await-previous-builds:
    parameters:
      branch:
        description: The branch to wait on
        type: string
    steps:
      - queue/until_front_of_line:
          time: "30" # how long a queue will wait until the job exits
          only-on-branch: <<parameters.branch>> # restrict queueing to a specific branch (default *)
          consider-job: false # block whole workflow if any job still running
  install-node:
    steps:
      - run:
          name: Install Node 14 (Required for Yarn)
          command: |
            set +e
            touch $BASH_ENV
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'nvm install v14.13.1' >> $BASH_ENV
            echo 'nvm alias default v14.13.1' >> $BASH_ENV
            sudo mkdir ~/.config
            sudo chown -R $USER:$GROUP ~/.config
  generate-checksums:
    steps:
      - run:
          name: "Generate initial checksum manifests"
          command: |
            mkdir .manifests
            scripts/generate-manifest.js .manifests/native_code '^Podfile' '^Makefile' '^Gemfile' '^emission/' '^Artsy' '^patches/react-native' '^\.env\.example'
            scripts/generate-manifest.js .manifests/node_modules '^yarn\.lock$' '^patches/'
            scripts/generate-manifest.js .manifests/js_transform '^\.manifests/node_modules' '^babel\.config\.js' '^relay\.config\.js' '^jest\.config\.js'
            scripts/generate-manifest.js .manifests/js_bundle '^\.manifests/js_transform' '^data/' '^index\.ios\.js' '^src/(?!.*(__tests__|__mocks__|__fixtures__))'
            scripts/generate-manifest.js .manifests/js_test_results '^\.manifests/js_transform' '^data/' '^src/'
            ls -lR emission > .manifests/emission_pod_file_list
            scripts/generate-manifest.js .manifests/cocoapods '^Podfile' '^Gemfile' '^\.manifests/emission_pod_file_list'
  setup-env-file:
    steps:
      - run:
          name: "Set up .env file"
          command: touch .env.shared && scripts/generate-env.js
  install-node-modules:
    steps:
      - restore_cache:
          keys:
            - v5-node_modules-{{ checksum ".manifests/node_modules" }}-{{ arch }}
      - run:
          name: Install node modules
          command: ls node_modules || yarn install
      - save_cache:
          key: v5-node_modules-{{ checksum ".manifests/node_modules" }}-{{ arch }}
          paths:
            - node_modules
  generate-query-map:
    steps:
      - run:
          name: Compile query map
          command: yarn relay
  test-js:
    steps:
      - restore_cache:
          keys:
            - v6-jest-{{ .Branch }}
      - restore_cache:
          keys:
            - v5-js_test_results-{{ checksum ".manifests/js_test_results" }}
      - run:
          name: Run TypeScript check
          command: ls test-results.json || yarn type-check
      - run:
          name: Run TSLint check
          command: ls test-results.json || yarn lint
      - run:
          name: Run jest tests
          command: ls test-results.json || yarn jest --outputFile test-results.json --json --ci --forceExit --runInBand
      - save_cache:
          key: v5-js_test_results-{{ checksum ".manifests/js_test_results" }}
          paths:
            - test-results.json
      - save_cache:
          key: v6-jest-{{ .Branch }}
          paths:
            - .jest
  bundle-js:
    steps:
      - restore_cache:
          keys:
            - v6-js_bundle-{{ checksum ".manifests/js_bundle" }}
      - restore_cache:
          keys:
            - v6-metro-{{ checksum ".manifests/js_transform" }}
      - run:
          name: Bundle emission
          command: ls emission/Pod/Assets/Emission.js || yarn bundle-for-native-ci
      - save_cache:
          key: v6-metro-{{ checksum ".manifests/js_transform" }}
          paths:
            - .metro
      - save_cache:
          key: v6-js_bundle-{{ checksum ".manifests/js_bundle" }}
          paths:
            - emission/Pod/Assets/Emission.js
            - emission/Pod/Assets/Emission.js.map
            - emission/Pod/Assets/assets
  install-gems:
    steps:
      - restore_cache:
          keys:
            - v4-gems-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run:
          name: Bundle install
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - save_cache:
          key: v4-gems-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
  install-cocoapods:
    steps:
      - restore_cache:
          keys:
            - v9-pods-{{ checksum ".manifests/cocoapods" }}
      - run:
          name: Install Pods
          command: bundle exec pod check --ignore-dev-pods || bundle exec pod install
      - run:
          name: Update echo
          command: ls Artsy/App/EchoNew.json || ./scripts/update-echo
      - save_cache:
          key: v9-pods-{{ checksum ".manifests/cocoapods" }}
          paths:
            - Pods
            # this changes after pod install because we don't instal dev tools on CI
            # so we save it to the cache to avoid comparison errors with Pods/Manifest.lock
            - Podfile.lock
  build-app-ios:
    steps:
      - restore_cache:
          keys:
            - v2-app_build_ios-{{ checksum ".manifests/app_build" }}
      - run:
          name: Build App
          command: ls derived_data || ./scripts/ci-ios
      - save_cache:
          key: v2-app_build_ios-{{ checksum ".manifests/app_build" }}
          paths:
            - derived_data
            - node_modules/react-native-config
  build-app-android:
    steps:
      - restore_cache:
          keys:
            - v1-app_build_android-{{ checksum ".manifests/app_build" }}
      - run:
          name: Build App
          command: ./scripts/ci-android
      - save_cache:
          key: v1-app_build_android-{{ checksum ".manifests/app_build" }}
          paths:
            - android/build
            - android/app/build
            - node_modules/react-native-config

jobs:
  deploy-nightly-beta:
    environment:
      BUNDLE_PATH: vendor/bundle # path to install gems and use for caching

    macos:
      xcode: 12.2.0

    steps:
      - checkout
      - install-node
      - run:
          name: Notify if new developer agreement
          command: ./scripts/notify-if-new-license-agreement
      - run:
          name: Deploy beta
          command: ./scripts/deploy-both

  update-metaphysics:
    executor:
      name: node/default
      tag: "14.13.1"
    steps:
      - checkout
      - generate-checksums
      - install-node-modules
      - generate-query-map
      - run:
          name: Update metaphysics
          command: yarn update-metaphysics

  check-pr:
    executor:
      name: node/default
      tag: "14.13.1"
    steps:
      - checkout
      - generate-checksums
      - install-node-modules
      - run:
          name: Danger
          command: yarn danger ci --verbose
      - run:
          name: Prevent Strictness Regressions
          command: node scripts/strictness-migration.js check-pr

  build-test-js:
    executor:
      name: node/default
      tag: "14.13.1"
    steps:
      - checkout
      - generate-checksums
      - setup-env-file
      - install-node-modules
      - generate-query-map
      - run:
          name: Check generated folder
          command: |
            if test "$(git diff -- src/__generated__)"
            then
              echo 'You forgot to run `yarn relay` before comitting'
              exit 1
            fi
      - test-js
      - bundle-js
      - run:
          name: Generate app_build manifest
          command: ./scripts/generate-manifest.js .manifests/app_build '^\./manifests/native_code' '^emission/Pod/Assets/'
      - store_artifacts:
          path: .manifests
      - persist_to_workspace:
          root: .
          paths:
            - .manifests
            - emission/Pod/Assets

  build-test-app-ios:
    environment:
      BUNDLE_PATH: vendor/bundle # path to install gems and use for caching

    macos:
      xcode: 12.2.0

    steps:
      - attach_workspace:
          at: ../workspace
      - restore_cache:
          keys:
            - v6-test-success-{{ checksum "../workspace/.manifests/native_code" }}
      # we can quit the macos build early if there were no native code changes
      # and we're not on the beta branch
      - run:
          name: Quit early if possible
          command: |
            if test $CIRCLE_BRANCH != beta-ios && ls xcode_test_raw.log
            then
              circleci step halt
            fi
      - run:
          name: Clear project dir
          command: |
            rm -rf /Users/distiller/project
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: List sims + devices
          command: |
            xcversion simulators
            instruments -s device
      - install-node
      - setup-env-file
      - install-node-modules
      - install-gems
      - install-cocoapods
      - build-app-ios
      - run:
          name: Run tests if native code has changed
          command: ls xcode_test_raw.log || ./scripts/ci-test-ios
      - save_cache:
          key: v6-test-success-{{ checksum ".manifests/native_code" }}
          paths:
            - xcode_test_raw.log

      - store_artifacts:
          path: xcode_build_raw.log
          prefix: build

      - store_artifacts:
          path: xcode_test_raw.log
          prefix: tests

      - store_test_results:
          path: test-results.xml

      - run:
          name: Danger
          command: bundle exec danger --danger_id=circle --dangerfile=Dangerfile.circle.rb --verbose

      - await-previous-builds:
          branch: beta-ios
      - run:
          name: Deploy if beta
          command: ./scripts/deploy-if-beta-branch-ios

  build-test-app-android:
    environment:
      BUNDLE_PATH: vendor/bundle # path to install gems and use for caching

    docker:
      - image: circleci/android:api-29-node

    steps:
      - attach_workspace:
          at: ../workspace
      - run:
          name: Clear project dir
          command: |
            rm -rf /Users/distiller/project
      - checkout
      - attach_workspace:
          at: .
      - install-node
      - setup-env-file
      - install-node-modules
      - install-gems
      - build-app-android

      - run:
          name: Danger
          command: bundle exec danger --danger_id=circle --dangerfile=Dangerfile.circle.rb --verbose

      - await-previous-builds:
          branch: beta-android
      - run:
          name: Deploy if beta
          command: ./scripts/deploy-if-beta-branch-android

  promote-beta-to-app-store:
    environment:
      BUNDLE_PATH: vendor/bundle # path to install gems and use for caching
    macos:
      xcode: 12.2.0
    steps:
      - checkout
      - install-gems
      - await-previous-builds:
          branch: app_store_submission
      - run:
          name: Promote if app_store_submission
          command: ./scripts/promote-if-appstore-submission-branch

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - deploy-nightly-beta

  promote:
    jobs:
      - promote-beta-to-app-store:
          filters:
            branches:
              only:
                - app_store_submission

  test-build-deploy:
    jobs:
      - check-pr:
          filters:
            branches:
              ignore:
                - master
                - beta-ios
                - beta-android
                - app_store_submission
      - build-test-js:
          filters:
            branches:
              ignore:
                - app_store_submission
      - horizon/block:
          context: horizon
          project_id: 37
          filters:
            branches:
              only:
                - beta-ios
                - beta-android
      - build-test-app-ios:
          filters:
            branches:
              ignore:
                - app_store_submission
                - beta-android
          requires:
            - build-test-js
            - horizon/block
      - build-test-app-android:
          filters:
            branches:
              ignore:
                - app_store_submission
                - beta-ios
          requires:
            - build-test-js
            - horizon/block
      - update-metaphysics:
          filters:
            branches:
              only:
                - beta-ios
                - beta-android
          requires:
            - build-test-app-ios
            - build-test-app-android
